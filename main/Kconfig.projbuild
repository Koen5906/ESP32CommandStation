menu "ESP32 Command Station"
    menu "WiFi"
        config HOSTNAME_PREFIX
            string "Hostname prefix"
            default "esp32cs_"
            help
                The LCC node id will be appended to this value, ie: esp32cs_050101013F00.
        choice WIFI_MODE
            bool "WiFi mode"
            default WIFI_MODE_SOFTAP
            config WIFI_MODE_STATION
                bool "Connect to SSID"
            config WIFI_MODE_SOFTAP
                bool "Create SoftAP"
            config WIFI_MODE_SOFTAP_STATION
                bool "Connect to SSID and create SoftAP"
        endchoice

        config WIFI_SOFTAP_SSID
            string "SoftAP SSID"
            depends on WIFI_MODE_SOFTAP
        config WIFI_SSID
            string "SSID"
            depends on WIFI_MODE_STATION || WIFI_MODE_SOFTAP_STATION
        config WIFI_PASSWORD
            string "Password"
            depends on WIFI_MODE_STATION || WIFI_MODE_SOFTAP_STATION
        choice WIFI_IP_TYPE
            bool "WiFi IP"
            default WIFI_IP_DHCP
            config WIFI_IP_DHCP
                bool "DHCP"
            config WIFI_IP_STATIC
                bool "Static"
        endchoice
        config WIFI_STATIC_IP_ADDRESS
            string "IP address"
            default "10.0.0.155"
            depends on WIFI_IP_STATIC
        config WIFI_STATIC_IP_GATEWAY
            string "Gateway IP address"
            default "10.0.0.1"
            depends on WIFI_IP_STATIC
        config WIFI_STATIC_IP_SUBNET
            string "Subnet mask"
            default "255.255.255.0"
            depends on WIFI_IP_STATIC
        config WIFI_STATIC_IP_DNS
            string "Primary DNS address"
            default "8.8.8.8"
            depends on WIFI_IP_STATIC
        config WIFI_SOFT_AP_CHANNEL
            int
            default 6
    endmenu

    menu "LCC"
        config LCC_NODE_ID
            hex "Node ID"
            default 0x050101013F00
            help 
                This is the LCC node identifier for the ESP32 Command Station.
                It is recommended, but not required, to request your own ID
                range via:
                https://registry.openlcb.org/requestuniqueidrange

        config LCC_CAN_ENABLED
            bool "CAN interface"
            default n
            help
                Enabling this option will require an externally connected
                SN6565HVD23x or MCP2551 IC.

        config LCC_CAN_RX_PIN
            int "CAN RX Pin"
            range 0 39
            depends on LCC_CAN_ENABLED
            help
                This is the ESP32 pin connected to the SN6565HVD23x/MCP2551 R (RX) pin.

        config LCC_CAN_TX_PIN
            int "CAN TX Pin"
            range 0 32
            depends on LCC_CAN_ENABLED
            help
                This is the ESP32 pin connected to the SN6565HVD23x/MCP2551 D (TX) pin.

        config LCC_FACTORY_RESET
            bool "Force factory reset on every startup"
            default n
            help
                Enabling this option will force the removal of the cached CDI
                and node configuration files on every startup of the node. This
                is generally not required or recommended.

        config LCC_GC_NEWLINES
            bool "Generate newlines at the end of every GridConnect packet"
            help
                Enabling this option will generate a newline character after
                every GridConnect packet that is sent out. This is generally
                only needed for debug purposes.
            default n

        config LCC_PRINT_ALL_PACKETS
            bool "Generate newlines at the end of every GridConnect packet"
            help
                Enabling this option will generate a newline character after
                every GridConnect packet that is sent out. This is generally
                only needed for debug purposes.
            default n

        config LCC_MEMORY_SPACES
            int "Number of memory spaces to allocate in the OpenMRN stack"
            default 10

        config LCC_GC_DELAY_USEC
            int "Number of memory spaces to allocate in the OpenMRN stack"
            default 500

        config LCC_GC_OUTBOUND_PACKET_LIMIT
            int "Maximum number of outbound GridConnect packets"
            default 2

        config LCC_EXECUTOR_SELECT_PRESCALER
            int "Number of StateFlows to execute before issuing a select() call"
            default 60

        config LCC_LOCAL_NODE_COUNT
            int "Maximum number of 'local' LCC nodes to allow"
            help
                This controls how many trains will be supported concurrently by
                the command station.
            default 30

        config LCC_SD_FSYNC_SEC
            int "Seconds between automatic calls to fsync() for the LCC config file"
            help
                This is only used when an SD card is detected.
            default 10
    endmenu

    menu "Sensors"
        depends on ENABLE_SENSORS

        config REMOTE_SENSORS_DECAY
            int "Number of milliseconds until a remote sensor will automatically clear"
            default 60000
        config REMOTE_SENSORS_FIRST_SENSOR
            int "First ID to assign remote sensors"
            default 100
    endmenu

    menu "S88 Sensors"
        depends on ENABLE_SENSORS

        config S88
            bool "Enable S88 Sensor functionality"
            default n

        config S88_CLOCK_PIN
            int "S88 Clock pin"
            range 0 32
            depends on S88

        config S88_RESET_PIN
            int "S88 Reset pin"
            range 0 32
            depends on S88

        config S88_LOAD_PIN
            int "S88 Load pin"
            range 0 32
            depends on S88

        config S88_FIRST_SENSOR
            int "First sensor ID"
            default 255

        config S88_MAX_SENSORS_PER_BUS
            int
            default 255
    endmenu

    menu "Nextion"
        config NEXTION
            bool "Enable Nextion HMI interface"
            default n
            help
                The Nextion HMI interface provides a throttle interface
                directly connected to the ESP32 Command Station.

        config NEXTION_RX_PIN
            int "RX Pin"
            range 0 39
            help
                This should be connected to the TX pin on the Nextion HMI,
                typically the blue wire.
            depends on NEXTION

        config NEXTION_TX_PIN
            int "TX Pin"
            range 0 32
            help
                This should be connected to the RX pin on the Nextion HMI,
                typically the yellow wire.
            depends on NEXTION

        config NEXTION_BAUD_RATE
            int "BAUD rate"
            default 115200
            help
                This must match the "bauds=XXX" value set in the Nextion
                HMI initialization event.
            depends on NEXTION

        choice NEXTION_UART
            bool "Hardware UART to use for the Nextion HMI"
            default NEXTION_UART_UART1
            depends on NEXTION
            config NEXTION_UART_UART1
                bool "UART1"
                depends on !OPS_RAILCOM_UART1 && !HC12_UART_UART1
            config NEXTION_UART_UART2
                bool "UART2"
                depends on !OPS_RAILCOM_UART2 && !HC12_UART_UART2
        endchoice

        config NEXTION_UART
            int
            default 1 if NEXTION_UART_UART1
            default 2 if NEXTION_UART_UART2
            depends on NEXTION
    endmenu

    menu "LocoNet"
        config LOCONET
            bool "Enable LocoNet interface"
            default n
            help
                The LocoNet interface allows using many of the available
                LocoNet sensors, throttles, accessories, etc with the ESP32
                Command Station. It is still under active development, if you
                find a device that does not work please let us know.

        config LOCONET_RX_PIN
            int "Pin connected to the LocoNet RX pin"
            range 0 39
            depends on LOCONET

        config LOCONET_TX_PIN
            int "Pin connected to the LocoNet TX pin"
            range 0 32
            depends on LOCONET
            
        choice LOCONET_UART
            bool "Hardware UART to use for LocoNet"
            default HC12_UART_UART1
            depends on LOCONET
            config LOCONET_UART_UART1
                bool "UART1"
                depends on !OPS_RAILCOM_UART1 && !HC12_UART_UART1 && !NEXTION_UART_UART1
            config LOCONET_UART_UART2
                bool "UART2"
                depends on !OPS_RAILCOM_UART2 && !HC12_UART_UART2 && !NEXTION_UART_UART2
        endchoice

        config LOCONET_INVERTED_LOGIC
            bool "Use inverted logic"
            default y
            help
                If you are using the LM311 circuit as defined on the ESP32
                Command Station website it is necessary to invert the logic.
                If you are using a different circuit you might be able to
                disable this option.
                
        config LOCONET_RX_PULLUP
            bool "Use pull-up resistor on RX pin"
            default y
            help
                If you are using the LM311 circuit as defined in the ESP32
                Command Station website and do not have a resistor connected
                between 3v3 (VCC) and the LOCONET_RX_PIN it is necessary to
                enable the internal pull up for the RX pin to ensure proper
                logic. If you have an external pull-up resistor this option can
                be disabled.
    endmenu

    menu "Advanced"
        config ENABLE_OUTPUTS
            bool "Enable GPIO pins to be used as outputs"
            default y

        config ENABLE_SENSORS
            bool "Enable GPIO pins to be used as sensors"
            default y

        config ALLOW_USAGE_OF_RESTRICTED_GPIO_PINS
            bool "Allow usage of restricted GPIO pins"
            help
                Enables usage of the following pins for sensors and outputs
                0 - Bootstrap / Firmware Flash Download
                1 - UART0 TX
                2 - Bootstrap / Firmware Flash Download
                3 - UART0 RX
                5 - Bootstrap
                6, 7, 8, 9, 10, 11 - flash pins
                12, 15 - Bootstrap / SD pins
            default n
            depends on ENABLE_OUTPUTS || ENABLE_SENSORS

        config TASK_MONITOR_INTERVAL_SEC
            int "Seconds between task monitoring printing"
            default 45
    
        config TASK_LIST_REPORT
            bool "Print FreeRTOS task list periodically"
            default n

        config TASK_LIST_INTERVAL_SEC
            int "Seconds between FreeRTOS task list printing"
            default 300
            depends on TASK_LIST_REPORT
        
        config AUTO_CREATE_ROSTER_ENTRIES
            bool "Create a roster entry for new trains on first use"
            default y

        config ROSTER_PERSISTENCE_INTERVAL_SEC
            int "Number of seconds between automatic persistence of train roster"
            default 30

        config TURNOUTS_PERSISTENCE_INTERVAL_SEC
            int "Number of seconds between automatic persistence of turnout list"
            default 30

        endmenu

    config ESP32CS_FORCE_FACTORY_RESET
        bool "Clear *ALL* configuration settings on startup"
        default n
        help
            Enabling this option will force clear all persistent configuration
            settings upon startup. This generally should not be required to be
            used.

    config ESP32CS_CDI_VERSION
        hex
        default 0x0150

endmenu